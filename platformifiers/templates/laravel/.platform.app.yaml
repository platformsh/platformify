# Container configuration.

#  A unique name for the app. Must be lowercase alphanumeric characters.
name: "{{ .Name }}"

#  The base image to use with a specific app language. Format: runtime:version.
type: "{{ .Type }}"

##########################
# Builds and variables

# Build-time visible variables.
variables:
  env:
    {{ range $key, $value := .Environment }}
    {{- $key }}: "{{ $value }}"
    {{ end }}
hooks:
  build: |
    set -eux
    {{ range $step := .BuildSteps }}
    {{- $step }}
    {{ end -}}
  deploy: {{ .DeployCommand }}

##########################
# Web configuration

# The configuration of the application when it is exposed to the web.
web:
  # You can configure a UNIX socket or a TCP port (default).
  # upstream:
  #  socket_family: unix
  commands:
    # You can use the $PORT or the $SOCKET environment variable depending on the socket family of your upstream
    start: {{ .WebCommand }}
  {{- if .Locations }}
  locations:
    {{ range $key, $value := .Locations -}}
    "{{ $key }}":
      {{- range $key, $value := $value }}
      {{ $key }}: {{ $value -}}
      {{ end }}
    {{ end -}}
  {{ else }}
  # The locations of the application. Use passthru or serve static files according to your application's needs.
  locations:
    "/":
      passthru: true
    # "/static":
    #  root: "static"
    #  expires: 1h
    #  allow: true
  {{ end }}

##########################
# Services

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
{{ if .Relationships -}}
relationships:
  {{ range $key, $value := .Relationships }}
  {{- $key }}: "{{ $value }}"
  {{ end }}
{{ else }}
# relationships:
#   database: "db:postgresql"
{{ end }}
