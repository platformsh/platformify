# Container configuration.

#   The name of this app. Must be unique within a project.
name: "{{ .Name }}"

#   The runtime the application uses.
type: "{{ .Type }}"

##########################
# Dependencies

{{ if .Dependencies -}}
dependencies:
  {{ range $key, $value := .Dependencies -}}
  {{ $key }}:
    {{ range $key, $value := $value }}
    {{- $key }}: "{{ $value }}"
    {{- end }}
  {{- end }}
{{ else }}
# dependencies:
#   nodejs: # Specify one NPM package per line.
#     pm2: '^4.5.0'
{{- end }}

build:
  flavor: none

##########################
# Builds and variables

# Build-time visible variables.
{{ if .Environment -}}
variables:
  env:
    {{ range $key, $value := .Environment }}
    {{- $key }}: "{{ $value }}"
    {{ else }}
    # Add environment variables here that are static.
    # NODE_ENV: development
    {{ end }}
{{ else }}
# variables:
#   env:
#     KEY: "value"
{{- end }}

# The hooks that will be triggered when the package is deployed.
hooks:
  # The build hook runs after package manager has been downloaded.
  # No services are available but the disk is writeable.
  build: |
    set -eux
    {{ range $step := .BuildSteps }}
    {{- $step }}
    {{ else }}
    # Add build steps here.
    # echo 'I am a build step'
    {{ end }}
  # The deploy hook runs after your application has been deployed and started.
  # Code cannot be modified at this point but the database is available.
  # The site is not accepting requests while this script runs so keep it
  # fast.
  deploy: |
    set -e
    {{ range $deploycmd := .DeployCommand }}
    {{- $deploycmd }}
    {{ else -}}
    # echo 'Put your deploy command here'
    {{ end }}

##########################
# Web configuration

# The configuration of the application when it is exposed to the web.
web:
  # You can configure a UNIX socket or a TCP port (default).
  # upstream:
  #  socket_family: unix
  commands:
    # You can use the $PORT or the $SOCKET environment variable depending on the socket family of your upstream
    start: {{ .WebCommand }}
  {{- if .Locations }}
  locations:
    {{ range $key, $value := .Locations -}}
    "{{ $key }}":
      {{- range $key, $value := $value }}
      {{ $key }}: {{ $value -}}
      {{ end }}
    {{ end -}}
  {{ else }}
  # The locations of the application. Use passthru or serve static files according to your application's needs.
  locations:
    "/":
      passthru: true
    # "/static":
    #  root: "static"
    #  expires: 1h
    #  allow: true
  {{ end }}

##########################
# Services

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
{{ if .Relationships -}}
relationships:
  {{ range $key, $value := .Relationships }}
  {{- $key }}: "{{ $value }}"
  {{ end }}
{{ else }}
# relationships:
#   database: "db:postgresql"
{{ end }}
