# Complete list of all available properties: {{ .Assets.Docs.AppReference }}

# A unique name for the app. Must be lowercase alphanumeric characters. Changing the name destroys data associated
# with the app.
name: "{{ .Name }}"

# The runtime the application uses.
# Complete list of available runtimes: {{ .Assets.Docs.AppReference }}type/
type: "{{ .Type }}"

# How many resources to devote to the app. Defaults to AUTO in production environments.
# More information: {{ .Assets.Docs.AppReference }}sizes/
# size:

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the {{ .Assets.EnvPrefix }}_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
# More information: {{ .Assets.Docs.AppReference }}relationships/
{{ if .Relationships -}}
relationships:
  {{ range $key, $value := .Relationships }}
  {{- $key }}:
  {{ end -}}
{{ else }}
# relationships:
#   db:
{{ end }}

# The size of the persistent disk of the application (in MB). Minimum value is 128.
{{ if .Disk -}}
disk: {{ .Disk }}
{{- else -}}
# disk: 512
{{- end }}

# Mounts define directories that are writable after the build is complete. If set as a local source, disk property is required.
# More information: {{ .Assets.Docs.AppReference }}mounts/
{{ if .Mounts -}}
mounts:
  {{ range $key, $value := .Mounts -}}
  "{{ $key }}":
    {{ range $key, $value := $value }}
    {{- $key }}: "{{ $value }}"
    {{ end }}
  {{ end -}}
{{- else -}}
# mounts:
#   "/.cache": # Represents the path in the app.
#     source: "local" # "local" sources are unique to the app, while "service" sources can be shared among apps.
#     source_path: "cache" # The subdirectory within the mounted disk (the source) where the mount should point.
{{- end }}

# The web key configures the web server running in front of your app.
# More information: {{ .Assets.Docs.AppReference }}web/
web:
  # Commands are run once after deployment to start the application process.
  # More information: {{ .Assets.Docs.AppReference }}web/commands/
  {{- if .WebCommand }}
  commands:
    # The command to launch your app. If it terminates, it’s restarted immediately.
    # You can use the $PORT or the $SOCKET environment variable depending on the socket family of your upstream
    start: {{ quote .WebCommand }}
  {{- else }}
  # commands:
    # The command to launch your app. If it terminates, it’s restarted immediately.
  #   You can use the $PORT or the $SOCKET environment variable depending on the socket family of your upstream
  {{- if eq "php" .Runtime }}
  #   PHP applications run PHP-fpm by default
  #   Read about alternative commands here: {{ .Assets.Docs.PHP }}alternate-start-commands/
  {{- end }}
  #   start: echo 'Put your start command here'
  {{- end }}
  # You can listen to a UNIX socket (unix) or a TCP port (tcp, default).
  {{- if eq "php" .Runtime }}
  # For PHP, the defaults are configured for PHP-FPM and shouldn't need adjustment.
  {{- end }}
  # Whether your app should speak to the webserver via TCP or Unix socket. Defaults to tcp
  # More information: {{ .Assets.Docs.AppReference }}web/upstream/socket-family/
  {{- if .SocketFamily }}
  upstream:
    # Whether your app should speak to the webserver via TCP or Unix socket. Defaults to tcp
    # More information: {{ .Assets.Docs.AppReference }}web/upstream/socket-family/
    socket_family: {{ .SocketFamily }}
  {{- else }}
  # upstream:
  #  socket_family: unix
  {{- end }}

  {{- if .Locations }}
  # Each key in locations is a path on your site with a leading /.
  # More information: {{ .Assets.Docs.AppReference }}web/locations/
  locations:
    {{ range $key, $value := .Locations -}}
    "{{ $key }}":
      {{ range $key, $value := $value }}
      {{- $key }}: {{ if typeIs "string" $value }}{{ quote $value }}{{ else }}{{ $value }}{{ end }}
      {{ end }}
    {{ end -}}
  {{ else }}
  # The locations of the application. Use passthru or serve static files according to your application's needs.
  locations:
    "/":
      passthru: true
    # "/static":
    # The directory to serve static assets for this location relative to the app’s root directory. Must be an
    # actual directory inside the root directory.
    #  root: "static"
    # The number of seconds whitelisted (static) content should be cached.
    #  expires: 1h
    # Whether to allow serving files which don’t match a rule.
    #  allow: true
  {{ end }}

# Alternate copies of the application to run as background processes.
# More information: {{ .Assets.Docs.AppReference }}workers/
# workers:

# The timezone for crons to run. Format: a TZ database name. Defaults to UTC, which is the timezone used for all logs
# no matter the value here. More information: {{ .Assets.Docs.TimeZone }}
# timezone: <time-zone>

# Access control for roles accessing app environments.
# More information: {{ .Assets.Docs.AppReference }}access/
# access:

# Variables to control the environment. More information: {{ .Assets.Docs.AppReference }}variables/
{{ if .Environment -}}
variables:
  env:
    {{ range $key, $value := .Environment }}
    {{- $key }}: "{{ $value }}"
    {{ end -}}
{{ else -}}
# variables:
#   env:
#     # Add environment variables here that are static.
{{- if eq "python" .Runtime }}
#     PYTHONUNBUFFERED: "1"
{{- else if eq "php" .Runtime }}
#     XDEBUG_MODE: off
{{- else if eq "nodejs" .Runtime }}
#     NODE_ENV: development
{{- else if eq "ruby" .Runtime }}
#     RACK_ENV: production
{{- else }}
#     ENV_VARIABLE_NAME: "value"
{{- end }}
{{- end }}

# Outbound firewall rules for the application. More information: {{ .Assets.Docs.AppReference }}firewall/
# firewall:

# Specifies a default set of build tasks to run. Flavors are language-specific.
# More information: {{ .Assets.Docs.AppReference }}build/
{{ if .BuildFlavor -}}
build:
  flavor: {{ .BuildFlavor }}
{{- else -}}
# build:
#   flavor: none
{{- end }}

# Installs global dependencies as part of the build process. They’re independent of your app’s dependencies and
# are available in the PATH during the build process and in the runtime environment. They’re installed before
# the build hook runs using a package manager for the language.
# More information: {{ .Assets.Docs.AppReference }}dependencies/
{{ if .Dependencies -}}
dependencies:
  {{- range $depGroupKey, $depGroupValue := .Dependencies }}
  {{ $depGroupKey }}:
    {{ range $key, $value := $depGroupValue }}
    {{ $key }}: "{{ $value }}"
    {{- end }}
  {{- end }}
{{ else -}}
# dependencies:
  {{- if eq "python" .Runtime }}
#   python3: # Specify one Python 3 package per line.
#     numpy: '*'
  {{- else if eq "php" .Runtime }}
#   php: # Specify one Composer package per line.
#     drush/drush: '8.0.0'
#     composer/composer: '^2'
  {{- else if eq "nodejs" .Runtime }}
#   nodejs: # Specify one NPM package per line.
#     pm2: '^4.5.0'
  {{- else }}
#   runtime: # Specify one package per line.
#     package: 'version'
  {{- end }}
{{- end }}

# Hooks allow you to customize your code/environment as the project moves through the build and deploy stages
# More information: {{ .Assets.Docs.AppReference }}hooks/
hooks:
  # The build hook is run after any build flavor.
  # More information: {{ .Assets.Docs.Hooks }}compare/build/
  build: |
    set -eux
    {{ range $step := .BuildSteps }}
    {{- $step }}
    {{ else }}
    # Add build steps here.
    # echo 'I am a build step'
    {{ end }}
  # The deploy hook is run after the app container has been started, but before it has started accepting requests.
  # More information: {{ .Assets.Docs.Hooks }}compare/deploy/
  deploy: |
    set -eux
    {{ range $deploycmd := .DeployCommand }}
    {{- $deploycmd }}
    {{ else -}}
    # echo 'Put your deploy command here'
    {{ end }}

  # The post_deploy hook is run after the app container has been started and after it has started accepting requests.
  # More information: {{ .Assets.Docs.Hooks }}compare/post-deploy/
  # post_deploy: |

# Scheduled tasks for the app.
# More information: {{ .Assets.Docs.AppReference }}crons/
# crons:

# Customizations to your PHP or Lisp runtime. More information: {{ .Assets.Docs.AppReference }}runtime/
# runtime:

# More information: {{ .Assets.Docs.AppReference }}additional-hosts/
# additional_hosts:
